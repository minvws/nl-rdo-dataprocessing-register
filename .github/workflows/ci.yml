name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - develop

jobs:
  CI:
    env:
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PASSWORD: postgres
      DB_USERNAME: postgres
      DB_DATABASE: postgres
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/cms
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
          cache-dependency-path: "**/package-lock.json"

      - name: Install npm dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=$NODE_AUTH_TOKEN"  >> ~/.npmrc
          npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.REPO_READ_ONLY_TOKEN }}

      - name: Install PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.2
          extensions: pgsql
          coverage: xdebug

      - name: Install exiftool
        run: sudo apt-get update && sudo apt-get install -y exiftool

      - name: Copy env
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Composer install
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.REPO_READ_ONLY_TOKEN }}"}}'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare application
        run: php artisan key:generate

      - name: Npm build
        run: npm run build

      - name: Clear Config
        run: php artisan config:clear

      - name: Assert unique migration names
        run: ./bin/assert-unique-migration-names

      - name: Move public website hugo template to the app
        working-directory: ./src
        run: |
          mv public-website/ cms/

      - name: Run Migration
        run: php artisan migrate:fresh
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Phpcs
        run: vendor/bin/phpcs -n

      - name: Phpstan
        run: |
          mkdir -p reports
          vendor/bin/phpstan analyse --error-format=json > reports/phpstan.json

      - name: Phpmd
        run: vendor/bin/phpmd app github ./phpmd.xml

      - name: Phpunit
        run: vendor/bin/pest --coverage --min=100 --log-junit=reports/report-phpunit.xml --coverage-clover=reports/coverage-phpunit.xml
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Run SonarCloud scanner
        uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/sonarcloud@main
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          project-base-dir: ./src/cms
