{
    "name": "minvws/nl-rdo-dataprocessing-register-private",
    "type": "project",
    "description": "minvws/nl-rdo-dataprocessing-register",
    "keywords": [
        "minvws",
        "dataprocessing",
        "verwerkingsregister"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.4",
        "ext-fileinfo": "*",
        "ext-pdo": "*",
        "ext-sockets": "*",
        "ext-zip": "*",
        "bacon/bacon-qr-code": "^3.0",
        "barryvdh/laravel-dompdf": "^3.1",
        "bkwld/cloner": "^3.13",
        "filament/filament": "^3.3.9",
        "filament/spatie-laravel-media-library-plugin": "^3.0-stable",
        "guzzlehttp/guzzle": "^7.2",
        "laravel/framework": "^12.0",
        "laravel/tinker": "^2.8",
        "livewire/livewire": "^3.4",
        "minvws/laravel-logging": "*@dev",
        "mlocati/ip-lib": "^1.18",
        "owen-it/laravel-auditing": "^14.0",
        "solution-forest/filament-tree": "^2.1",
        "spatie/laravel-csp": "^3.13",
        "spatie/laravel-model-states": "^2.6",
        "spomky-labs/otphp": "^11.2",
        "tapp/filament-auditing": "^3.0",
        "webmozart/assert": "^1.11",
        "xenolope/quahog": "^3.0"
    },
    "require-dev": {
        "barryvdh/laravel-debugbar": "^3.9",
        "calebdw/larastan": "^3.0",
        "dealerdirect/phpcodesniffer-composer-installer": "^1.0",
        "doctrine/sql-formatter": "^1.5",
        "fakerphp/faker": "^1.9.1",
        "larastan/larastan": "*",
        "laravel/sail": "^1.18",
        "mockery/mockery": "^1.4.4",
        "nunomaduro/collision": "^8.0",
        "pestphp/pest": "^3.5",
        "pestphp/pest-plugin-faker": "^3.0",
        "pestphp/pest-plugin-laravel": "^3.0",
        "pestphp/pest-plugin-livewire": "^3.0",
        "phpcsstandards/phpcsextra": "^1.2.0",
        "phpmd/phpmd": "^2.14",
        "phpstan/extension-installer": "^1.4",
        "phpstan/phpstan": "^2.1",
        "phpstan/phpstan-deprecation-rules": "^2.0",
        "phpstan/phpstan-phpunit": "^2.0",
        "phpstan/phpstan-strict-rules": "^2.0",
        "phpstan/phpstan-webmozart-assert": "^2.0",
        "phpunit/phpunit": "^11.0",
        "slevomat/coding-standard": "^8.15",
        "spatie/laravel-ignition": "^2.0",
        "squizlabs/php_codesniffer": "^3.9",
        "swisnl/phpstan-faker": "^1.1"
    },
    "autoload": {
        "files": [
            "app/helpers.php"
        ],
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "repositories": [
        {
            "type": "path",
            "url": "packages/nl-rdo-laravel-logging"
        }
    ],
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi",
            "@php artisan filament:upgrade",
            "@php artisan optimize:clear"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "phpcbf": "vendor/bin/phpcbf -n --parallel=12",
        "phpcs": "vendor/bin/phpcs -n --parallel=12",
        "phpmd": "vendor/bin/phpmd app github ./phpmd.xml",
        "phpmd-baseline": "vendor/bin/phpmd app github ./phpmd.xml --generate-baseline",
        "phpstan": "vendor/bin/phpstan --memory-limit=-1",
        "phpstan-clear-cache": "rm -rf /tmp/phpstan",
        "phpstan-reset": [
            "php artisan optimize:clear",
            "@phpstan-clear-cache",
            "vendor/bin/phpstan analyze --memory-limit=-1"
        ],
        "phpstan-baseline": "vendor/bin/phpstan --memory-limit=-1 --generate-baseline",
        "public-check": "php artisan public-website:check",
        "public-refresh": "php artisan public-website:refresh",
        "queue-listen": "php artisan queue:listen --queue=high,default,low",
        "reset": [
            "composer install",
            "rm -rf storage/app/livewire-tmp",
            "php artisan optimize:clear",
            "php artisan storage:link",
            "@reset-db",
            "@reset-test-db",
            "npm i",
            "npm run build",
            "@reset-public",
            "@reset-static",
            "@phpstan-clear-cache"
        ],
        "reset-db": "php artisan migrate:fresh --step --seed",
        "reset-public": [
            "rm -rf storage/app/public-website",
            "@public-refresh",
            "@public-check"
        ],
        "reset-static": [
            "rm -rf storage/app/static-website",
            "@static-refresh"
        ],
        "reset-test-db": "DB_DATABASE=testing php artisan migrate:fresh",
        "static-check": "php artisan static-website:check",
        "static-refresh": "php artisan static-website:refresh",
        "test": "php artisan test --parallel --coverage --compact",
        "test-update-snapshots": [
            "@reset-test-db",
            "php vendor/bin/pest --update-snapshots"
        ],
        "test-report": "php artisan test --coverage-html strorage/phpunit",
        "test-reset": [
            "rm -rf storage/app/livewire-tmp",
            "php artisan optimize:clear",
            "php artisan test --parallel --recreate-databases"
        ]
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "phpstan/extension-installer": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
